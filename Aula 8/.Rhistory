+(3, 5)
`+`(3, 5)
?`?`
sessionInfo()
teste <- read_delim("C:/Users/Rafael/Downloads/teste.csv", delim = "|")
library(tidyverse)
teste <- read_delim("C:/Users/Rafael/Downloads/teste.csv", delim = "|")
data_virado_longo <-
data %>%
pivot_longer(cols = c(VDG1CA, VDG1C1, VDG1C3, VDG1C4),
names_to = "NIVEL_DOS_PROFESS",
values_to = "PROFESS_POR_NIVEL") %>%
mutate(NIVEL_DOS_PROFESS = case_when(NIVEL_DOS_PROFESS == "VDG1CA" ~ "Creche",
NIVEL_DOS_PROFESS == "VDG1C1" ~ "Pré-escola",
NIVEL_DOS_PROFESS == "VDG1C3" ~ "Fundamental",
NIVEL_DOS_PROFESS == "VDG1C4" ~ "Médio"))
data <- read_delim("C:/Users/Rafael/Downloads/teste.csv", delim = "|")
data_virado_longo <-
data %>%
pivot_longer(cols = c(VDG1CA, VDG1C1, VDG1C3, VDG1C4),
names_to = "NIVEL_DOS_PROFESS",
values_to = "PROFESS_POR_NIVEL") %>%
mutate(NIVEL_DOS_PROFESS = case_when(NIVEL_DOS_PROFESS == "VDG1CA" ~ "Creche",
NIVEL_DOS_PROFESS == "VDG1C1" ~ "Pré-escola",
NIVEL_DOS_PROFESS == "VDG1C3" ~ "Fundamental",
NIVEL_DOS_PROFESS == "VDG1C4" ~ "Médio"))
summarise: now 3,188 rows and 3 columns, 2 group variables remaining (MUNIC, PROFESS_POR_NIVEL)
data_virado_longo %>%
group_by(MUNIC, PROFESS_POR_NIVEL) %>%
summarise(PCT_PROFESS_NIVEL_MUNIC = PROFESS_POR_NIVEL * 100 / PROFESS)
data_virado_longo %>%
group_by(MUNIC) %>%
summarise(PCT_PROFESS_NIVEL_MUNIC = PROFESS_POR_NIVEL * 100 / PROFESS)
View(data_virado_longo)
View(data)
data_virado_longo %>%
group_by(MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(PCT_PROFESS_NIVEL_MUNIC = PROFESS_POR_NIVEL * 100 / PROFESS)
?pivot_longer
educ_RO_long <- data %>% pivot_longer(c(VDG1CA,VDG1C1,VDG1C3,VDG1C4),
names_to="Nível_Professor",
values_to="Numero_Professores") %>%
mutate(Nível_Professor=case_when(Nível_Professor=="VDG1CA"~"Creche",
Nível_Professor=="VDG1C1"~"Pré-Escola",
Nível_Professor=="VDG1C3"~"Fundamental",
Nível_Professor=="VDG1C4"~"Médio"))
data_virado_longo %>%
group_by(MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(PCT_PROFESS_NIVEL_MUNIC = PROFESS_POR_NIVEL / PROFESS)
data_virado_longo %>%
group_by(NIVEL_DOS_PROFESS) %>%
summarise(PCT_PROFESS_NIVEL_MUNIC = PROFESS_POR_NIVEL / PROFESS)
summarise(PCT_PROFESS_NIVEL_MUNIC = PROFESS_POR_NIVEL * 100 / sum(PROFESS, na.rm = TRUE)
data_virado_longo %>%
data_virado_longo %>% data |>
data <- read_delim("C:/Users/Rafael/Downloads/teste.csv", delim = "|")
data_virado_longo <-
data %>%
pivot_longer(cols = c(VDG1CA, VDG1C1, VDG1C3, VDG1C4),
names_to = "NIVEL_DOS_PROFESS",
values_to = "PROFESS_POR_NIVEL") %>%
mutate(NIVEL_DOS_PROFESS = case_when(NIVEL_DOS_PROFESS == "VDG1CA" ~ "Creche",
NIVEL_DOS_PROFESS == "VDG1C1" ~ "Pré-escola",
NIVEL_DOS_PROFESS == "VDG1C3" ~ "Fundamental",
NIVEL_DOS_PROFESS == "VDG1C4" ~ "Médio"))
data_virado_longo %>%
data_virado_longo %>%
group_by(MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(PCT_PROFESS_NIVEL_MUNIC = PROFESS_POR_NIVEL * 100 / sum(PROFESS, na.rm = TRUE))
educ_RO_long_mun_nivel <- educ_RO_long %>% group_by(CODMUNIC, MUNIC, Nível_Professor) %>%
summarize(Media_Professores=mean(Numero_Professores,na.rm=T),
Total_Professores=sum(Numero_Professores,na.rm=T)) %>%
ungroup() %>%
select(-CODMUNIC)
data_virado_longo %>%
group_by(MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(TOTAL_PROFESS_POR_NIVEL = sum(PROFESS_POR_NIVEL, na.rm = T),
TOTAL_PROFESS_GERAL = sum(PROFESS, na.rm = T)) %>%
group_by(MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(PCT_PROFESS_NIVEL_MUNIC = TOTAL_PROFESS_POR_NIVEL * (100 / TOTAL_PROFESS_GERAL))
data_virado_longo %>%
group_by(MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(TOTAL_PROFESS_POR_NIVEL = sum(PROFESS_POR_NIVEL, na.rm = T),
TOTAL_PROFESS_GERAL = sum(PROFESS, na.rm = T),
PCT_PROFESS_NIVEL_MUNIC = TOTAL_PROFESS_POR_NIVEL * (100 / TOTAL_PROFESS_GERAL))
data_virado_longo %>%
group_by(MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(TOTAL_PROFESS_POR_NIVEL = sum(PROFESS_POR_NIVEL, na.rm = T),
TOTAL_PROFESS_GERAL = sum(PROFESS, na.rm = T),
PCT_PROFESS_NIVEL_MUNIC = TOTAL_PROFESS_POR_NIVEL / TOTAL_PROFESS_GERAL * 100)
1.2+73.5+11.4+9.64
2+122+19+16
resposta <- data_virado_longo %>%
group_by(MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(TOTAL_PROFESS_POR_NIVEL = sum(PROFESS_POR_NIVEL, na.rm = T),
TOTAL_PROFESS_GERAL = sum(PROFESS, na.rm = T),
PCT_PROFESS_NIVEL_MUNIC = TOTAL_PROFESS_POR_NIVEL / TOTAL_PROFESS_GERAL * 100)
View(resposta)
resposta <- data_virado_longo %>%
group_by(MUNIC) %>%
summarise(TOTAL_PROFESS_POR_NIVEL = sum(PROFESS_POR_NIVEL, na.rm = T),
TOTAL_PROFESS_GERAL = sum(PROFESS, na.rm = T),
PCT_PROFESS_NIVEL_MUNIC = TOTAL_PROFESS_POR_NIVEL / TOTAL_PROFESS_GERAL * 100)
View(resposta)
resposta <- data_virado_longo %>%
group_by(CODMUNIC, MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(TOTAL_PROFESS_POR_NIVEL = sum(PROFESS_POR_NIVEL, na.rm = T),
TOTAL_PROFESS_GERAL = sum(PROFESS, na.rm = T),
PCT_PROFESS_NIVEL_MUNIC = TOTAL_PROFESS_POR_NIVEL / TOTAL_PROFESS_GERAL * 100)
View(resposta)
data_virado_longo <-
data %>% filter(CODFUNC == "Ativo") |>
pivot_longer(cols = c(VDG1CA, VDG1C1, VDG1C3, VDG1C4),
names_to = "NIVEL_DOS_PROFESS",
values_to = "PROFESS_POR_NIVEL") %>%
mutate(NIVEL_DOS_PROFESS = case_when(NIVEL_DOS_PROFESS == "VDG1CA" ~ "Creche",
NIVEL_DOS_PROFESS == "VDG1C1" ~ "Pré-escola",
NIVEL_DOS_PROFESS == "VDG1C3" ~ "Fundamental",
NIVEL_DOS_PROFESS == "VDG1C4" ~ "Médio"))
resposta <- data_virado_longo %>%
group_by(CODMUNIC, MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(TOTAL_PROFESS_POR_NIVEL = sum(PROFESS_POR_NIVEL, na.rm = T),
TOTAL_PROFESS_GERAL = sum(PROFESS, na.rm = T),
PCT_PROFESS_NIVEL_MUNIC = TOTAL_PROFESS_POR_NIVEL / TOTAL_PROFESS_GERAL * 100)
View(resposta)
data <- read_delim("C:/Users/Rafael/Downloads/teste.csv", delim = "|") |>
filter(CODFUNC=="Ativo")
data_virado_longo <-
data %>% filter(CODFUNC == "Ativo") |>
pivot_longer(cols = c(VDG1CA, VDG1C1, VDG1C3, VDG1C4),
names_to = "NIVEL_DOS_PROFESS",
values_to = "PROFESS_POR_NIVEL") %>%
mutate(NIVEL_DOS_PROFESS = case_when(NIVEL_DOS_PROFESS == "VDG1CA" ~ "Creche",
NIVEL_DOS_PROFESS == "VDG1C1" ~ "Pré-escola",
NIVEL_DOS_PROFESS == "VDG1C3" ~ "Fundamental",
NIVEL_DOS_PROFESS == "VDG1C4" ~ "Médio"))
resposta <- data_virado_longo %>%
group_by(CODMUNIC, MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(TOTAL_PROFESS_POR_NIVEL = sum(PROFESS_POR_NIVEL, na.rm = T),
TOTAL_PROFESS_GERAL = sum(PROFESS, na.rm = T),
PCT_PROFESS_NIVEL_MUNIC = TOTAL_PROFESS_POR_NIVEL / TOTAL_PROFESS_GERAL * 100)
View(resposta)
122+19+16+2
data <- read_delim("C:/Users/Rafael/Downloads/teste.csv", delim = "|") |>
filter(CODFUNC=="Ativo")
data_virado_longo <-
data %>% filter(CODFUNC == "Ativo") |>
pivot_longer(cols = c(VDG1CA, VDG1C1, VDG1C3, VDG1C4),
names_to = "NIVEL_DOS_PROFESS",
values_to = "PROFESS_POR_NIVEL") %>%
mutate(NIVEL_DOS_PROFESS = case_when(NIVEL_DOS_PROFESS == "VDG1CA" ~ "Creche",
NIVEL_DOS_PROFESS == "VDG1C1" ~ "Pré-escola",
NIVEL_DOS_PROFESS == "VDG1C3" ~ "Fundamental",
NIVEL_DOS_PROFESS == "VDG1C4" ~ "Médio"))
data_virado_longo %>%
group_by(MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(TOTAL_PROFESS_POR_NIVEL = sum(PROFESS_POR_NIVEL, na.rm = T),
TOTAL_PROFESS_GERAL = sum(PROFESS, na.rm = T),
PCT_PROFESS_NIVEL_MUNIC = TOTAL_PROFESS_POR_NIVEL * (100 / TOTAL_PROFESS_GERAL)) %>%
educ_RO_long <- data %>% pivot_longer(c(VDG1CA,VDG1C1,VDG1C3,VDG1C4),
names_to="Nível_Professor",
values_to="Numero_Professores") %>%
mutate(Nível_Professor=case_when(Nível_Professor=="VDG1CA"~"Creche",
Nível_Professor=="VDG1C1"~"Pré-Escola",
Nível_Professor=="VDG1C3"~"Fundamental",
Nível_Professor=="VDG1C4"~"Médio"))
data_virado_longo %>%
group_by(MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(TOTAL_PROFESS_POR_NIVEL = sum(PROFESS_POR_NIVEL, na.rm = T),
TOTAL_PROFESS_GERAL = sum(PROFESS, na.rm = T),
PCT_PROFESS_NIVEL_MUNIC = TOTAL_PROFESS_POR_NIVEL * (100 / TOTAL_PROFESS_GERAL))
data_virado_longo %>%
group_by(MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(TOTAL_PROFESS_POR_NIVEL = sum(PROFESS_POR_NIVEL, na.rm = T),
TOTAL_PROFESS_GERAL = sum(PROFESS, na.rm = T)) %>%
group_by(MUNIC, NIVEL_DOS_PROFESS) %>%
summarise(PCT_PROFESS_NIVEL_MUNIC = TOTAL_PROFESS_POR_NIVEL * (100 / TOTAL_PROFESS_GERAL))
install.packages("basedosdados")
library("basedosdados")
# Para carregar o dado direto no R
query <- bdplyr("br_poder360_pesquisas.microdados")
# Defina o seu projeto no Google Cloud
set_billing_id("base-dos-dados-352918")
# Para carregar o dado direto no R
query <- bdplyr("br_poder360_pesquisas.microdados")
# Para carregar o dado direto no R
query <- bdplyr("br_poder360_pesquisas.microdados")
# Para carregar o dado direto no R
query <- bdplyr("br_sp_alesp.despesas_gabinete")
# Para carregar o dado direto no R
query <- bdplyr("br_sp_alesp.deputado")
# Para carregar o dado direto no R
query <- bdplyr("br_tse_eleicoes.candidatos")
# Para carregar o dado direto no R
query <- bdplyr("br_tse_eleicoes.local_secao")
# Para carregar o dado direto no R
query <- bdplyr("br_inep_saeb.aluno_ef_2ano")
query <- "SELECT * FROM `basedosdados.br_poder360_pesquisas.microdados`"
df <- bd_collect(query)
query <- bdplyr("br_poder360_pesquisas.microdados")
df <- read_sql(query)
query <- bdplyr("br_poder360_pesquisas.microdados")
query <- read_sql(query = 'SELECT * FROM `basedosdados.br_ana_atlas_esgotos.municipios` ')
?bdplyr
query <- bdplyr("basedosdados.br_poder360_pesquisas.microdados")
query <- bdplyr("br_poder360_pesquisas.microdados")
base_sim <- bdplyr("br_ms_sim.municipio_causa_idade")
municipios <- bdplyr("br_bd_diretorios_brasil.municipio")
set_billing_id("base-dos-dados-352918")
install.packages("basedosdados")
library("basedosdados")
# Defina o seu projeto no Google Cloud
set_billing_id("<YOUR_PROJECT_ID>")
# Para carregar o dado direto no R
query <- bdplyr("br_ibge_inpc.mes_brasil")
df <- bd_collect(query)
# Para carregar o dado direto no R
query <- bdplyr(SELECT * FROM `basedosdados.br_ms_sinan.microdados_violencia`)
# Para carregar o dado direto no R
query <- bdplyr("SELECT * FROM `basedosdados.br_ms_sinan.microdados_violencia`")
# Para carregar o dado direto no R
query <- bdplyr("SELECT * FROM `basedosdados.br_ms_sinan.microdados_violencia`")
# Para carregar o dado direto no R
query <- bdplyr("br_inep_censo_escolar.escola")
base_sim <- bdplyr("br_ms_sim.municipio_causa_idade")
#Inicio da Jornada
#Atribuição do projeto na Base dos dados
con <- bigrquery::dbConnect(
bigquery(),
billing ='basedosdados',
project='basedosdados'
)
install.packages("bigrquery")
library(bigrquery)
#Inicio da Jornada
#Atribuição do projeto na Base dos dados
con <- bigrquery::dbConnect(
bigquery(),
billing ='basedosdados',
project='basedosdados'
)
#query necessária para responder à minha pergunta
query = "SELECT ano, turno,sigla_uf, sigla_partido, id_municipio,
votos, resultado, cargo
FROM `basedosdados.br_tse_eleicoes.resultados_candidato_municipio`
WHERE ano=2018 AND sigla_uf='SP' AND cargo='presidente'"
#atribuição do Dataframe
df <- DBI::dbGetQuery(con, query)
#Inicio da Jornada
#Atribuição do projeto na Base dos dados
con <- bigrquery::dbConnect(
bigquery(),
billing ='base-dos-dados-352918',
project='Base dos Dados'
)
#query necessária para responder à minha pergunta
query = "SELECT ano, turno,sigla_uf, sigla_partido, id_municipio,
votos, resultado, cargo
FROM `basedosdados.br_tse_eleicoes.resultados_candidato_municipio`
WHERE ano=2018 AND sigla_uf='SP' AND cargo='presidente'"
#atribuição do Dataframe
df <- DBI::dbGetQuery(con, query)
#query necessária para responder à minha pergunta
query = "SELECT * FROM `basedosdados.br_tse_eleicoes.resultados_candidato_municipio`
#atribuição do Dataframe
df <- DBI::dbGetQuery(con, query)
#query necessária para responder à minha pergunta
query = "SELECT * FROM `basedosdados.br_tse_eleicoes.resultados_candidato_municipio`
#atribuição do Dataframe
df <- DBI::dbGetQuery(con, query)
#query necessária para responder à minha pergunta
query = "SELECT * FROM `basedosdados.br_tse_eleicoes.resultados_candidato_municipio`"
#atribuição do Dataframe
df <- DBI::dbGetQuery(con, query)
# Defina o seu projeto no Google Cloud
set_billing_id("base-dos-dados-352918")
# Para carregar o dado direto no R
query <- bdplyr("`br_inep_censo_escolar.escola`")
sessionInfo()
2 + 2
2 + 9 * 4
4 + 3 / 10^2
pi
pi - 3
pi ^ 2
1111111 * 1111111
a <- 4
a <- a * 5
a <- a + 10
a
pi
pi * a
a <- seq(a, 100, 5)
a
x <- y <- z <- w <- pi
rm(list = ls())
a
pi
a <- seq(a, 100, 5)
a <- seq(0, 100, 5)
a
numeros <- c(1, 4, 10, pi, 1/3)
numeros
texto <- c("a", "b", "FRB", "Rio Branco")
texto
(tudo_junto <- c(numeros, texto))
?seq
2 + 9 * 4
4 + 3 / 10^2
pi - 3
a <- 4
b <- a * 5
c <- b + 10
c
a <- seq(c, 100, 5)
a
install.packages("tidyverse")
library(tidyverse)
sessionInfo()
sessionInfo
sessionInfo()
(35 + 65)/2
35 + 65/2
(35 + 65)/2
mean(1:1000)
seq(1, 100, 1)
seq(1, 100, 2)
numeros <- 1:1000
numeros
numeros_desc <- 1000:1
numeros_desc
impares <- seq(from = 1, to = 1000, by = 2)
impares
mean(impares)
numeros impares <- 1:10
numeros_impares <- 1:10
seq(1, 10, 2)
seq(from = 1, to = 10, by = 2)
?seq
seq(by = 2, from = 1, to = 10)
seq(to = 10, by = 2)
seq(from = 0, by = .1)
sd(impares)
range(impares)
summary(impares)
?c
numeros <- c(1, 4, 10, pi, 1/3)
numeros
texto <- c("a", "b", "FRB", "Rio Branco")
texto
(tudo_junto <- c(numeros, texto))
nomes <- c("Rafael", "Davi", "Ana", "Pedro")
formacao <- c("Ciência Política", "RI", "Adm Publica", "RI")
tempo_empresa <- c(3, 10, 10, 1)
equipe <- data.frame(nomes, formacao, tempo_empresa)
equipe
View(equipe)
View(equipe)
View(equipe)
impares[287]
impares[300]
impares[c(1, 76, 48)]
impares[-c(1:250)]
impares[impares > 900]
maiores_que_900 <- impares[impares > 900]
900 <- impares[impares > 900]
maiores_que_900
equipe[1, 3]
equipe[1, 2]
equipe[1,]
equipe[3,]
equipe[,2]
equipe$formacao
equipe$nomes
equipe[equipe$tempo_empresa == 10,]
equipe[equipe$tempo_empresa < 5,]
equipe[equipe$tempo_empresa < 5 | equipe$formacao == "Adm Publica",]
equipe[equipe$tempo_empresa > 2 & equipe$tempo_empresa < 5,]
install.packages("here") # Teste
library(here)
library(tidyverse)
wb <- read_csv2(here("wb-brazil-2020-07-18.csv"))
library(tidyverse)
mpg %>% ggplot()
mpg %>% ggplot() + # gráfico-base
geom_point(mapping = aes(x = displ, y = hwy))
mpg %>% ggplot() + # gráfico-base
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x =  displ, y = hwy))
View(diamonds)
diamonds %>%
group_by(cut) %>%
tally()
diamonds %>%
group_by(cut) %>%
tally() %>%
ungroup()
diamonds %>%
tally() %>%
diamonds %>%
tally()
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut))
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut))
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = cut))
?diamonds
?geom_bar
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = cut)) +
coord_flip()
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = clarity)) +
coord_flip()
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge") +
coord_flip()
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill") +
coord_flip()
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill") +
coord_flip() +
theme_bw()
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill") +
#  coord_flip() +
theme_bw()
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = cut)) +
coord_polar()
install.packages(c("gganimate", "gifski", "gapminder"))
library(gapminder)
View(gapminder)
library(gganimate)
library(gifski)
library(gapminder)
gapminder %>% ggplot(aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
# Código específico para a animação
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
install.packages("dataSuarus")
library(datasauRus)
datasaurus_dozen %>% ggplot(aes(x = x, y = y)) +
geom_point() +
theme_minimal() +
transition_states(dataset, 3, 1) +
ease_aes('cubic-in-out')
datasaurus_dozen %>% ggplot(aes(x = x, y = y)) +
geom_point() +
theme_classic() +
transition_states(dataset, 3, 1) +
ease_aes('cubic-in-out')
?ggsave
plot <- diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = cut)) +
coord_polar()
ggsave(plot)
ggsave(plot, filename = "teste.png", device = "png")
setwd("C:/Users/Rafael/Meu Drive/Documentos/Cursos/Rio Branco/Aula 8")
library(tidyverse)
?theme
mtcars
mtcars %>% ggplot() %>%
geom_point(aes(displ, hwy))
mtcars %>% ggplot() +
geom_point(aes(displ, hwy))
mtcars %>% ggplot() +
geom_point(aes(disp, hwy))
mtcars %>% ggplot() +
geom_point(aes(x = disp, y = hwy))
mtcars
mpg %>% ggplot() +
geom_point(aes(x = disp, y = hwy))
mpg %>% ggplot() +
geom_point(aes(x = displ, y = hwy))
mpg %>% ggplot() +
geom_point(aes(x = displ, y = hwy)) +
labs(title = "Título")
mpg %>% ggplot() +
geom_point(aes(x = displ, y = hwy)) +
labs(title = "Título") +
theme(title = element_text(size = 18))
mpg %>% ggplot() +
geom_point(aes(x = displ, y = hwy)) +
labs(title = "Título") +
theme(title = element_text(size = 40))
mpg %>% ggplot() +
geom_point(aes(x = displ, y = hwy)) +
labs(title = "Título") +
theme(title = element_text(size = 40, color = "red"))
mpg %>% ggplot() +
geom_point(aes(x = displ, y = hwy)) +
labs(title = "Título") +
theme(plot.title = element_text(size = 40, color = "red"))
library(readr)
library(here)
nazis <- read_csv(here("nazis.csv"))
View(nazis)
library(jtools)
m1 <- lm(nazivote ~ shareunemployed, data = nazis)
summ(m1, confint = TRUE)
plot_summs(m1, scale = TRUE)
m3 <- lm(nazivote ~ shareunemployed + sharewhite + shareblue + shareself, data = nazis)
plot_summs(m3, scale = TRUE) # gráfico com resultados
plot_summs(m3, scale = TRUE) # gráfico com resultados
