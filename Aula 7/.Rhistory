grid::grid.newpage()
grid::grid.draw(ambos)
# pacotes necessários
library(ggrepel)
library(gridExtra)
library(lubridate)
library(rgdal)
library(maptools)
library(ggmap)
library(mapproj)
library(sf)
library(rio)
library(stringr)
library(maps)
library(readxl)
library(tidyverse)
library(here)
# configuracao para desabilitar notacao cientifica
options(scipen = 999)
# carregar os dados
troops <- read_table2(here("troops.txt"))
cities <- read_table2(here("cities.txt"))
temps <- read_table2(here("temps.txt"))
troops %>% ggplot() +
geom_path(aes(x = long, y = lat, group = group))
troops %>% ggplot() +
geom_path(aes(x = long, y = lat, group = group, color = direction, size = survivors))
troops %>% ggplot() +
geom_path(aes(x = long, y = lat, group = group, color = direction, size = survivors),
lineend = "round") + # linhas arredondadas para melhor efeito
scale_size(range = c(0.5, 15)) # desagrega o número de categorias na escala
troops %>% ggplot() +
geom_path(aes(x = long, y = lat, group = group, color = direction, size = survivors),
lineend = "round") + # linhas arredondadas para melhor efeito
scale_size(range = c(0.5, 15)) + # desagrega o número de categorias na escala
scale_colour_manual(values = c("#e6ccac", "#252523")) + # cores originais
labs(x = NULL, y = NULL) + # tira os rótulos dos eixos
guides(color = FALSE, size = FALSE) # tira os tiques dos eixos
# Agora estamos chamando os dados dentro de cada geom. Por quê?
ggplot() +
geom_path(data = troops, aes(x = long, y = lat, group = group, color = direction, size = survivors), lineend = "round") +
geom_point(data = cities, aes(x = long, y = lat), color = "#DC5B44") +  # loc. das cidades
geom_text_repel(data = cities, aes(x = long, y = lat, label = city), # nomes das cidades
color = "red", size = 3, fontface = "bold") +
scale_size(range = c(0.5, 15)) +
scale_colour_manual(values = c("#e6ccac", "#252523")) +
labs(x = NULL, y = NULL) +
guides(color = FALSE, size = FALSE) +
theme_void() # tira todos os elementos do gráfico
grafico_marcha <- ggplot() +
geom_path(data = troops, aes(x = long, y = lat, group = group, color = direction, size = survivors), lineend = "round") +
geom_point(data = cities, aes(x = long, y = lat), color = "#DC5B44") +  # loc. das cidades
geom_text_repel(data = cities, aes(x = long, y = lat, label = city), # nomes das cidades
color = "red", size = 3, fontface = "bold") +
scale_size(range = c(0.5, 15)) +
scale_colour_manual(values = c("#e6ccac", "#252523")) +
labs(x = NULL, y = NULL) +
guides(color = FALSE, size = FALSE) +
theme_void() # tira todos os elementos do gráfico
grafico_marcha
temps %>% ggplot(aes(x = long, y = temp)) +
geom_line() +
geom_text(aes(label = temp), vjust = 1.5)
# Melhorando a apresentação dos dados
temps.nice <- temps %>% mutate(nice.label = paste0(temp, "°, ", month, ". ", day))
# Melhorando a apresentação dos dados
temps.nice <- temps %>%
mutate(nice.label = paste0(temp, "°, ", month, ". ", day))
grafico_temperaturas <- ggplot(data = temps.nice, aes(x = long, y = temp)) +
geom_line() + # linha
geom_label(aes(label = nice.label), size = 2.5) + # rótulos
labs(x = NULL, y = "° Celsius") + # escalas
scale_x_continuous(limits = c(23.5, 38.1)) + # coincidir escala com o gráfico da marcha
scale_y_continuous(position = "right") + # eixo y na direita
coord_cartesian(ylim = c(-35, 5)) +  # espaçamento
theme_bw() + # ajustes no tema
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank(), axis.ticks = element_blank(),
panel.border = element_blank())
grafico_temperaturas
library(ggmap)
recorte_europa <- c(left = -13.10, bottom = 35.75, right = 41.04, top = 61.86)
europa <- get_stamenmap(bbox = recorte_europa, zoom = 5, maptype = "toner-lite", where = "cache")
europa %>% ggmap() +
geom_path(data = troops, aes(x = long, y = lat, group = group, color = direction, size = survivors),
lineend = "round") +
scale_size(range = c(0.5, 5)) +
scale_colour_manual(values = c("#e6ccac", "#252523")) +
guides(color = FALSE, size = FALSE) +  theme_nothing()
europa %>% ggmap() +
geom_path(data = troops, aes(x = long, y = lat, group = group,
color = direction, size = survivors),
lineend = "round") +
scale_size(range = c(0.5, 5)) +
scale_colour_manual(values = c("#e6ccac", "#252523")) +
guides(color = FALSE, size = FALSE) +
theme_nothing()
recorte_minard <- c(left = 23.5, bottom = 53.4, right = 38.1, top = 56.3)
area_minard <- get_stamenmap(bbox = recorte_minard, zoom = 8, maptype = "toner-lines", where = "cache")
mapa <- ggmap(area_minard) +
geom_path(data = troops, aes(x = long, y = lat, group = group, color = direction, size = survivors), lineend = "round") +
geom_point(data = cities, aes(x = long, y = lat), color = "#DC5B44") +  # loc. das cidades
geom_text_repel(data = cities, aes(x = long, y = lat, label = city), # nomes das cidades
color = "red", size = 3, fontface = "bold") +
scale_size(range = c(0.5, 15)) +
scale_colour_manual(values = c("#e6ccac", "#252523")) +
labs(x = NULL, y = NULL) +
guides(color = FALSE, size = FALSE) + theme_nothing()
mapa
recorte_minard <- c(left = 23.5, bottom = 53.4, right = 38.1, top = 56.3)
area_minard <- get_stamenmap(bbox = recorte_minard, zoom = 8, maptype = "toner-lines", where = "cache")
mapa <- ggmap(area_minard) +
geom_path(data = troops, aes(x = long, y = lat, group = group, color = direction, size = survivors), lineend = "round") +
geom_point(data = cities, aes(x = long, y = lat), color = "#DC5B44") +  # loc. das cidades
geom_text_repel(data = cities, aes(x = long, y = lat, label = city), # nomes das cidades
color = "red", size = 3, fontface = "bold") +
scale_size(range = c(0.5, 15)) +
scale_colour_manual(values = c("#e6ccac", "#252523")) +
labs(x = NULL, y = NULL) +
guides(color = FALSE, size = FALSE) + theme_nothing()
mapa
# Juntar dados de ambos os gráficos
ambos <- gtable_rbind(ggplotGrob(mapa), ggplotGrob(grafico_temperaturas))
# Ajustando paineis
paineis <- ambos$layout$t[grep("panel", ambos$layout$name)]
map.panel.height <- ambos$heights[paineis][1]
ambos$heights[paineis] <- unit(c(unlist(map.panel.height)[1], 0.1), "null")
# Exibindo ambos os gráficos juntos
grid::grid.newpage()
grid::grid.draw(ambos)
grid::grid.newpage()
grid::grid.draw(ambos)
library(ggrepel)
library(gridExtra)
library(lubridate)
library(rgdal)
library(maptools)
library(ggmap)
library(mapproj)
library(sf)
library(rio)
library(stringr)
library(maps)
library(readxl)
library(tidyverse)
library(here)
# configuracao para desabilitar notacao cientifica
options(scipen = 999)
# carregar dados
troops <- read_table2(here("troops.txt"))
cities <- read_table2(here("cities.txt"))
temps <- read_table2(here("temps.txt"))
View(cities)
View(temps)
View(troops)
troops %>% ggplot() +
geom_path(aes(x = long, y = lat, group = group))
troops %>% ggplot() +
geom_path(aes(x = long, y = lat, group = group))
troops %>% ggplot() +
geom_path(aes(x = long, y = lat, group = group, color = direction, size = survivors))
troops %>% ggplot() +
geom_path(aes(x = long, y = lat, group = group, color = direction, size = survivors),
lineend = "round") + # linhas arredondadas para melhor efeito
scale_size(range = c(0.5, 15)) # desagrega o número de categorias na escala
troops %>% ggplot() +
geom_path(aes(x = long, y = lat, group = group, color = direction, size = survivors),
lineend = "round") + # linhas arredondadas para melhor efeito
scale_size(range = c(0.5, 15)) + # desagrega o número de categorias na escala
scale_colour_manual(values = c("#e6ccac", "#252523")) + # cores originais
labs(x = NULL, y = NULL) + # tira os rótulos dos eixos
guides(color = FALSE, size = FALSE) # tira os tiques dos eixos
ggplot() +
geom_path(data = troops, aes(x = long, y = lat, group = group, color = direction, size = survivors), lineend = "round") +
geom_point(data = cities, aes(x = long, y = lat), color = "#DC5B44") + # loc. das cidades
geom_text_repel(data = cities, aes(x = long, y = lat, label = city), # nomes das cidades
color = "red", size = 3, fontface = "bold") +
scale_size(range = c(0.5, 15)) +
scale_colour_manual(values = c("#e6ccac", "#252523")) +
labs(x = NULL, y = NULL) +
guides(color = FALSE, size = FALSE) +
theme_void() # tira todos os elementos do gráfico
temps %>% ggplot(aes(x = long, y = temp)) +
geom_line() +
geom_text(aes(label = temp), vjust = 1.5)
# Melhorando a apresentação dos dados
temps.nice <- temps %>%
mutate(nice.label = paste0(temp, "°, ", month, ". ", day))
grafico_temperaturas <- ggplot(data = temps.nice, aes(x = long, y = temp)) +
geom_line() + # linha
geom_label(aes(label = nice.label), size = 2.5) + # rótulos
labs(x = NULL, y = "° Celsius") + # escalas
scale_x_continuous(limits = c(23.5, 38.1)) + # coincidir escala com o gráfico da marcha
scale_y_continuous(position = "right") + # eixo y na direita
coord_cartesian(ylim = c(-35, 5)) +  # espaçamento
theme_bw() + # ajustes no tema
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank(), axis.ticks = element_blank(),
panel.border = element_blank())
grafico_temperaturas
recorte_europa <- c(left = -13.10, bottom = 35.75, right = 41.04, top = 61.86)
europa <- get_stamenmap(bbox = recorte_europa, zoom = 5, maptype = "toner-lite", where = "cache")
europa %>% ggmap() +
geom_path(data = troops, aes(x = long, y = lat, group = group, color = direction, size = survivors),
lineend = "round") +
scale_size(range = c(0.5, 5)) +
scale_colour_manual(values = c("#e6ccac", "#252523")) +
guides(color = FALSE, size = FALSE) + theme_nothing()
recorte_minard <- c(left = 23.5, bottom = 53.4, right = 38.1, top = 56.3)
area_minard <- get_stamenmap(bbox = recorte_minard, zoom = 8, maptype = "toner-lines", where = "cache")
mapa <- ggmap(area_minard) +
geom_path(data = troops, aes(x = long, y = lat, group = group, color = direction, size = survivors), lineend = "round") +
geom_point(data = cities, aes(x = long, y = lat), color = "#DC5B44") + # loc. das cidades
geom_text_repel(data = cities, aes(x = long, y = lat, label = city), # nomes das cidades
color = "red", size = 3, fontface = "bold") +
scale_size(range = c(0.5, 15)) +
scale_colour_manual(values = c("#e6ccac", "#252523")) +
labs(x = NULL, y = NULL) +
guides(color = FALSE, size = FALSE) + theme_nothing()
mapa
ambos <- gtable_rbind(ggplotGrob(mapa), ggplotGrob(grafico_temperaturas))
# Ajustando paineis
paineis <- ambos$layout$t[grep("panel", ambos$layout$name)]
map.panel.height <- ambos$heights[paineis][1]
ambos$heights[paineis] <- unit(c(unlist(map.panel.height)[1], 0.1), "null")
# Exibindo ambos os gráficos juntos
grid::grid.newpage()
grid::grid.draw(ambos)
troops %>% ggplot() +
geom_path(aes(x = long, y = lat, group = group))
# carregar dados
troops <- read_table2(here("Aula 7/troops.txt"))
cities <- read_table2(here("Aula 7/cities.txt"))
temps <- read_table2(here("Aula 7/temps.txt"))
library(ggrepel)
library(gridExtra)
library(lubridate)
library(rgdal)
# carregar dados
troops <- read_table2(here("Aula 7/troops.txt"))
library(tidyverse)
library(maptools)
library(ggmap)
library(mapproj)
library(sf)
library(rio)
library(stringr)
library(maps)
library(readxl)
library(tidyverse)
library(here)
# carregar dados
troops <- read_table2(here("Aula 7/troops.txt"))
cities <- read_table2(here("Aula 7/cities.txt"))
temps <- read_table2(here("Aula 7/temps.txt"))
View(cities)
View(temps)
View(troops)
troops %>% ggplot() +
geom_path(aes(x = long, y = lat, group = group))
View(troops)
troops %>% ggplot() +
geom_path(aes(x = long, y = lat, group = group, color = direction, linewidth = survivors))
ggplot() +
geom_path(data = troops, aes(x = long, y = lat, group = group, color = direction, size = survivors), lineend = "round") +
geom_point(data = cities, aes(x = long, y = lat), color = "#DC5B44") + # loc. das cidades
geom_text_repel(data = cities, aes(x = long, y = lat, label = city), # nomes das cidades
color = "red", size = 3, fontface = "bold") +
scale_size(range = c(0.5, 15)) +
scale_colour_manual(values = c("#e6ccac", "#252523")) +
labs(x = NULL, y = NULL) +
guides(color = FALSE, size = FALSE) +
theme_void() # tira todos os elementos do gráfico
View(cities)
View(temps)
temps %>% ggplot(aes(x = long, y = temp)) +
geom_line() +
geom_text(aes(label = temp), vjust = 1.5)
# Melhorando a apresentação dos dados
temps_celsius <- temps %>%
mutate(nice.label = paste0(temp, "°, ", month, ". ", day))
grafico_temperaturas <- ggplot(data = temps_celsius, aes(x = long, y = temp)) +
geom_line() + # linha
geom_label(aes(label = nice.label), size = 2.5) + # rótulos
labs(x = NULL, y = "° Celsius") + # escalas
scale_x_continuous(limits = c(23.5, 38.1)) + # coincidir escala com o gráfico da marcha
scale_y_continuous(position = "right") + # eixo y na direita
coord_cartesian(ylim = c(-35, 5)) + # espaçamento
theme_bw() + # ajustes no tema
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank(), axis.ticks = element_blank(),
panel.border = element_blank())
grafico_temperaturas
library(ggmap)
register_stadiamaps(API_Stadia)
recorte_europa <- c(left = -13.10, bottom = 35.75, right = 41.04, top = 61.86)
europa <- get_stadiamap(bbox = recorte_europa, zoom = 5, maptype = "stamen_toner_lite", where = "cache")
# API no Stadua, aproveitando que esse código não é exibido
API_Stadia <- "4f3c76d7-21da-4d3b-9dcd-0df0122e94b6"
europa <- get_stadiamap(bbox = recorte_europa, zoom = 5, maptype = "stamen_toner_lite", where = "cache")
register_stadiamaps(API_Stadia)
europa <- get_stadiamap(bbox = recorte_europa, zoom = 5, maptype = "stamen_toner_lite", where = "cache")
europa %>% ggmap() +
geom_path(data = troops, aes(x = long, y = lat, group = group, color = direction, size = survivors),
lineend = "round") +
scale_size(range = c(0.5, 5)) +
scale_colour_manual(values = c("#e6ccac", "#252523")) +
guides(color = FALSE, size = FALSE) + theme_nothing()
recorte_minard <- c(left = 23.5, bottom = 53.4, right = 38.1, top = 56.3)
area_minard <- get_stadiamap(bbox = recorte_minard, zoom = 8, maptype = "stamen_toner_lite", where = "cache")
mapa <- ggmap(area_minard) +
geom_path(data = troops, aes(x = long, y = lat, group = group, color = direction, size = survivors), lineend = "round") +
geom_point(data = cities, aes(x = long, y = lat), color = "#DC5B44") + # loc. das cidades
geom_text_repel(data = cities, aes(x = long, y = lat, label = city), # nomes das cidades
color = "red", size = 3, fontface = "bold") +
scale_size(range = c(0.5, 15)) +
scale_colour_manual(values = c("#e6ccac", "#252523")) +
labs(x = NULL, y = NULL) +
guides(color = FALSE, size = FALSE) + theme_nothing()
mapa
# Juntar dados de ambos os gráficos
ambos <- gtable_rbind(ggplotGrob(mapa), ggplotGrob(grafico_temperaturas))
# Ajustando paineis
paineis <- ambos$layout$t[grep("panel", ambos$layout$name)]
map.panel.height <- ambos$heights[paineis][1]
ambos$heights[paineis] <- unit(c(unlist(map.panel.height)[1], 0.1), "null")
# Exibindo ambos os gráficos juntos
grid::grid.newpage()
grid::grid.draw(ambos)
