library(tidyverse)
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = clarity))
View(diamonds)
diamonds %>% ggplot()
?ggplot
?geom_bar
ggplot(data = diamonds) +
geom_bar(aes((x = clarity)))
?aes
ggplot(diamonds) +
geom_bar(aes(clarity))
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut))
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = cut))
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut))
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = cut))
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = clarity))
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "dodge")
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = cut)) +
coord_flip()
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = cut))
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = cut)) +
coord_flip()
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = cut)) +
coord_polar()
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = cut))
diamonds %>% ggplot() +
geom_bar(mapping = aes(x = cut, fill = cut)) +
coord_polar()
install.packages("gganimate")
install.packages("gapminder")
library(gganimate)
library(gapminder)
gapminder %>% ggplot(aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
# Código específico para a animação
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
anim <- gapminder %>% ggplot(aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
# Código específico para a animação
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
anim
View(anim)
p <- ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) +
geom_point() +
transition_states(Species,
transition_length = 2,
state_length = 1)
p
install.packages('gifski')
library(gifski)
gapminder %>% ggplot(aes(gdpPercap, lifeExp, size = pop, colour = country)) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_colour_manual(values = country_colors) +
scale_size(range = c(2, 12)) +
scale_x_log10() +
# Código específico para a animação
labs(title = 'Year: {frame_time}', x = 'GDP per capita', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
